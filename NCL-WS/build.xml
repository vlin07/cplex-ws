<!-- ================================================================= 
     Build script for NCL-WS                                          
     https://svn.xxx.com/xxx/trunk/Assets/xxx/NCL-WS
     make sure that svnant.jar, svnClientAdapter.jar, svnjavahl.jar are in ant_home/lib
     For windows:  "set SVN=C:\Program Files\TortoiseSVN\bin\TortoiseProc.exe"         
     ================================================================= -->
<project name="NCL-WS" default="buildEar" basedir=".">
	<description>NCL Assisted Search WebService app</description>

	
    <!-- ================================================================= -->
    <!-- init - Initialize                                                 -->
    <!-- ================================================================= -->
	<target name="init" description="initialize">
		<!-- set the ant timestamp -->
	    <tstamp/>

		<!-- determine if linux server or developer based windows -->
		<condition property="isUnix">
			<os family="unix" />
		</condition>
		<condition property="isWin">
			<os family="windows" />
		</condition>

	    <!-- Gets access to system environment, set env.* properties       -->
	    <property environment="env" />

		<!-- get build properties from file -->
	    <property file="build.properties" />

		<!-- get deploy properties from file -->
	    <property file="deploy.properties" />

<!-- temp dir.checkout	-->
<property name="dir.checkout"     value="z://USER-DATA/NCL/ANTEAR-test/ant-test/NCL-WS" />

		<!-- set static property values -->
		<property name="warfile"        value="NCL-WS.war" />
		<property name="earfile"        value="NCLEar.ear" />

			
		<property name="dir.webcontent" value="WebContent" />
		<property name="dir.src"        value="src" />
		<property name="dir.build"      value="build" />
		<property name="dir.dist"       value="dist" />
		<property name="dir.xjc"       value="xjc" />
		
		

		<!-- set classpath -->
		<path id="project.classpath" >
			<fileset dir="${ant.home}/lib" >
				<include name="ant.jar" />
				<!-- <include name="ant-contrib-1.0b3.jar" /> -->
			</fileset>
			<fileset dir="Z:\USER-DATA\NCL\jars" >
				<include name="*.jar" />
			</fileset>
		</path>

		<!-- log property values -->
		<echo message="Start logging property values..." />
		<echo message="warfile                =[${warfile}]" />
		<echo message="earfile                =[${earfile}]" />
		<echo message="dir.webcontent         =[${dir.webcontent}]" />
		<echo message="dir.src                =[${dir.src}]" />
		<echo message="dir.build              =[${dir.build}]" />
		<echo message="dir.checkout           =[${dir.checkout}]" />
		<echo message="ant.home               =[${ant.home}]" />
		<echo message="ant.project.name       =[${ant.project.name}]" />
		<echo message="dir.tmp                =[${dir.tmp}]" />
		<echo message="isUnix                 =[${isUnix}]" />
		<echo message="isWin                  =[${isWin}]" />
		<echo message="End logging property values..." />
	</target>

   <!-- ================================================================= -->
    <!-- re-compile/move XSD classes - Build war - http://ant.apache.org/manual/Tasks/war.html   -->
    <!-- ================================================================= -->
	
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask">
	  <classpath>
	    <fileset dir="c:/jaxb-ri-2.2.6/lib" includes="*.jar" />
	  </classpath>
	</taskdef>
	
	
	<target name="compileXSD-XJC" depends="init, clean" description="compiles Java code">
		<!-- compile classes from XSD - if XSD is newer then class files -->

		<xjc destdir="${dir.xjc}" schema="c:/ant-test/NCL-AssistedSearch.xsd" removeOldOutput="yes" package="com.ncl.assisted_search.messages">
			<arg value="-npa"/>
		  <produces dir="${dir.xjc}/com/ncl/assisted_search/messages" includes="* impl/*" />
		</xjc>
		
	
		<!-- copy gen'd code -->
		<copy todir="${dir.src}/com/ncl/assisted_search/messages">
			<fileset dir="${dir.xjc}/com/ncl/assisted_search/messages" />
		</copy>	
	</target>
	
	
    <!-- ================================================================= -->
    <!-- compile - compile Java                                          
    depends="checkout" -->
    <!-- ================================================================= -->
	<target name="compileMainCode" depends="compileXSD-XJC" description="compiles Java code">
		<javac destdir="${dir.build}/classes" debug="false" srcdir="${dir.src}">
			<classpath refid="project.classpath"/>
		</javac>
		
		<!-- copy properties -->
			<!-- example (non-at this time)	
				<copy file="${dir.src}/queries.properties" tofile="${dir.build}/classes/queries.properties" />
			-->
	</target>
	
	
	
   <!-- ================================================================= -->
    <!-- build - Build war - http://ant.apache.org/manual/Tasks/war.html   -->
    <!-- ================================================================= -->
	<target name="buildWar" depends="compileMainCode" description="build war">
		<war destfile="${dir.dist}/${warfile}" webxml="${dir.webcontent}/WEB-INF/web.xml">
			<fileset dir="${dir.webcontent}" excludes="WEB-INF/classes/com/**" />
			<classes dir="${dir.build}/classes"/>
		</war>
		
		<!-- backup successful build -->
		<copy todir="${dir.checkout}/dist">
			<fileset dir="${dir.dist}" />
		</copy>
		<zip destfile="${ant.project.name}-${DSTAMP}-${TSTAMP}.zip" basedir="${dir.checkout}" 
			description="Zip ${ant.project.name} before cleanup" />
	</target>

	

    <!-- ================================================================= -->
    <!-- buildEar - Build war - http://ant.apache.org/manual/Tasks/ear.html   -->
    <!-- ================================================================= -->
	<target name="buildEar" depends="buildWar" description="build ear" >
		<ear destfile="${dir.dist}/${earfile}" appxml="${dir.webcontent}/META-INF/application.xml">
			<fileset dir="${dir.dist}" includes="NCL-WS.war"/>
		</ear>
	</target>
	
	
    <!-- ================================================================= -->
    <!-- clean - Cleans build files and directories                        -->
    <!-- ================================================================= -->
	<target name="clean" depends="init" description="cleans build files and directories">
		<echo message="Delete dist, build, and checkout directories" />
		<delete dir="${dir.dist}" />
		<delete dir="${dir.build}" />
		<delete dir="${dir.xjc}" />

<!--		<delete dir="${dir.checkout}" />  -->
		
		<!-- make directories -->
		<mkdir dir="${dir.build}/classes" />
		<mkdir dir="${dir.dist}" />
		<mkdir dir="${dir.xjc}" />
				
	</target>

	
	
</project>